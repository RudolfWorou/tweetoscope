apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: cpusdi1-36-ns
spec:
  type: NodePort
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      targetPort: 2181
      port: 2181
      nodePort: 30081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  namespace: cpusdi1-36-ns
spec:
  replicas: 4
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      name: zookeeper-pod
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper-container
          image: zookeeper
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: cpusdi1-36-ns
spec:
  selector:
    app: kafka-broker
  ports:
    - protocol: TCP
      targetPort: 9092
      port: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-service
  namespace: cpusdi1-36-ns
spec:
  replicas: 4
  selector:
    matchLabels:
      app: kafka-service
  template:
    metadata:
      name: kafka-service
      labels:
        app: kafka-service
    spec:
      containers:
        - name: kafka-container
          image: wurstmeister/kafka #gitlab-student.centralesupelec.fr:4567/tweetos-buddies/tweetoscope/ubuntu_with_kafka
          imagePullPolicy: Always
          env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka
            - name: KAFKA_CREATE_TOPICS
              value: "tweets:5:3,cascade_series:3:3,cascade_properties:3:3,samples:3:3,alerts:3:3,stats:3:3,models:3:3,logs:3:3"
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "$(HOST_IP):30081"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://$(POD_IP):9092"
