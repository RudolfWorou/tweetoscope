
#################################################################################################################
#                                               LES STAGES                                                      #
#################################################################################################################

stages:
    - build
    #- test
    - quality
    - package
    #- deploy
    #- performance

#################################################################################################################
#                                                  BUILD                                                        #
#################################################################################################################
services : 
    - docker:dind
kafka_build :
    stage: build
    image: docker:latest
    script:
        - cd Kafka
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_start_kafka -t $CI_REGISTRY_IMAGE/ubuntu_with_kafka  .   
    #only:
    #    changes:
    #        - Kafka/**/*
    
    only:
        refs :
            - master

services: 
    - docker:dind
Generator_build :
    stage: build
    when: on_success
    image: docker:latest
    script:
        - cd Generator
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_generator -t $CI_REGISTRY_IMAGE/ubuntu_with_generator  .
    #only:
    #    changes:
    #        - Generator/**/*
    only:
        refs :
            - master

services: 
    - docker:dind
logger_build :
    stage: build
    image: docker:latest
    allow_failure : true
    script:
        - cd Logger
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_logger -t $CI_REGISTRY_IMAGE/python_with_logger .
    #only:
    #    changes :
    #        - Logger/**/*
    only:
        refs :
            - master    
services: 
    - docker:dind
collector_build :
    stage: build
    image: docker:latest
    script:
        - cd Collector
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_collector -t $CI_REGISTRY_IMAGE/python_with_collector .
    #only:
    #    changes :
    #        - Collector/**/*
    only:
        refs :
            - master
    when: on_success 

services: 
    - docker:dind
estimator_build :
    stage: build
    image: docker:latest
    script:
        - cd Estimator
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_estimator -t $CI_REGISTRY_IMAGE/python_with_estimator .
    only:
        refs :
            - master
    when : on_success

services: 
    - docker:dind
learner_image_job :
    stage: build
    image: docker:latest
    allow_failure : true
    script:
        - cd Learner
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_learner -t $CI_REGISTRY_IMAGE/python_with_learner .
    only:
        refs :
            - master
    #only:
    #    changes:
    #        - Learner/**/*
            
services: 
    - docker:dind
monitor_image_job :
    stage: build
    image: docker:latest
    allow_failure : true
    script:
        - cd Monitor
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_monitor -t $CI_REGISTRY_IMAGE/python_with_monitor .
    #only:
        #changes:
        #    - Monitor/**/*
    only:
        refs :
            - master
#################################################################################################################
#                                                  TEST                                                         #
#################################################################################################################



#################################################################################################################
#                                                  QUALITY                                                      #
#################################################################################################################
code_quality_job:
  stage: quality
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - mkdir codequality-results
    - docker run
        --env CODECLIMATE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        --volume /tmp/cc:/tmp/cc
        codeclimate/codeclimate analyze -f html > ./codequality-results/index.html
  artifacts:
    paths:
      - codequality-results/

#################################################################################################################
#                                                  PACKAGE                                                      #
#################################################################################################################
services : 
    - docker:dind
kafka_build :
    stage: package
    image: docker:latest
    script:
        - docker push $CI_REGISTRY_IMAGE/ubuntu_with_kafka 
       
    #only:
    #    changes:
    #        - Kafka/**/*
    only:
        refs :
            - master
services: 
    - docker:dind
Generator_build :
    stage: package
    when: on_success 
    image: docker:latest
    script:
        - docker push $CI_REGISTRY_IMAGE/ubuntu_with_generator
    #only:
    #    changes:
    #        - Generator/**/*
    only:
        refs :
            - master

services: 
    - docker:dind
logger_build :
    stage: package
    image: docker:latest
    allow_failure : true
    script:
        - docker push $CI_REGISTRY_IMAGE/python_with_logger
    #only:
    #    changes :
    #        - Logger/**/*
    only:
        refs :
            - master    
services: 
    - docker:dind
collector_build :
    stage: package
    image: docker:latest
    script:
       - docker push $CI_REGISTRY_IMAGE/python_with_collector
    only:
        refs :
            - master
    #only:
        #changes :
            #- Collector/**/*
    when: on_success 

services: 
    - docker:dind
estimator_build :
    stage: package
    image: docker:latest
    script:
        - docker push $CI_REGISTRY_IMAGE/python_with_estimator

    only:
        refs :
            - master
    when : on_success

services: 
    - docker:dind
learner_image_job :
    stage: package
    image: docker:latest
    allow_failure : true
    script:
        - docker push $CI_REGISTRY_IMAGE/python_with_learner
    only:
        refs :
            - master
    #only:
        #changes:
            #- Learner/**/*
            
services: 
    - docker:dind
monitor_image_job :
    stage: package
    image: docker:latest
    allow_failure : true
    script:
        - docker push $CI_REGISTRY_IMAGE/python_with_monitor
    only:
        refs :
            - master
    #only:
    #    changes:
    #        - Monitor/**/*
