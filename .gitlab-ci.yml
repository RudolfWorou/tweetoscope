stages:
    - build
    #- test
    #- quality
    #- package

services : 
    - docker:dind
kafka_build :
    stage: build
    image: docker:latest
    script:
        - cd Kafka
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_start_kafka -t $CI_REGISTRY_IMAGE/ubuntu_with_kafka  .
        #- docker push $CI_REGISTRY_IMAGE/ubuntu_with_kafka 
       
    only:
        refs:
            - master
        #changes:
        #    - Kafka/**/*
services: 
    - docker:dind
Generator_build :
    stage: build
    image: docker:latest
    script:
        - cd Generator
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_generator -t $CI_REGISTRY_IMAGE/ubuntu_with_generator  .
        #- docker push $CI_REGISTRY_IMAGE/ubuntu_with_generator
    only:
        refs:
            - master
    when: on_success # s'ex√©cutera uniquement si le job kafka_build

services: 
    - docker:dind
logger_build :
    stage: build
    image: docker:latest
    allow_failure : true
    script:
        - cd Logger
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_logger -t $CI_REGISTRY_IMAGE/python_with_logger .
        - docker push $CI_REGISTRY_IMAGE/python_with_logger
    only:
        refs :
            - master
        
services: 
    - docker:dind
collector_build :
    stage: build
    image: docker:latest
    script:
        - cd Collector
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_collector -t $CI_REGISTRY_IMAGE/python_with_collector .
    #   - docker push $CI_REGISTRY_IMAGE/python_with_collector
    only:
        refs :
            - master
    when: on_success 

    services: 
    - docker:dind
estimator_build :
    stage: build
    image: docker:latest
    script:
        - cd Estimator
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_estimator -t $CI_REGISTRY_IMAGE/python_with_estimator .
        #- docker push $CI_REGISTRY_IMAGE/python_with_estimator

    only:
        refs :
            - master
    when : on_success

services: 
    - docker:dind
learner_image_job :
    stage: build
    image: docker:latest
    allow_failure : true
    script:
        - cd Learner
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_learner -t $CI_REGISTRY_IMAGE/python_with_learner .
        #- docker push $CI_REGISTRY_IMAGE/python_with_learner
    only:
        refs :
            - master
        #changes:
        #    - Learner/**/*
            
services: 
    - docker:dind
monitor_image_job :
    stage: build
    image: docker:latest
    allow_failure : true
    script:
        - cd Monitor
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -f Dockerfile_monitor -t $CI_REGISTRY_IMAGE/python_with_monitor .
        #- docker push $CI_REGISTRY_IMAGE/python_with_monitor
    only:
        refs : 
            - master
        #changes:
        #    - Monitor/**/*
